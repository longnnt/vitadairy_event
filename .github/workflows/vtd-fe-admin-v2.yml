name: Deploy Vita fe admin v2

on:
  push:
    branches: ['develop', 'prod']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checking-deploy-k8s-change:
    if: github.ref == 'refs/heads/develop'
    name: Check Deploy Staging config change to GKE
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get specific changed files
        uses: tj-actions/changed-files@v27
        id: check-k8s-changes
        with:
          files: |
            infra/k8s/**
          sha: ${{ github.sha }}

      - name: Wait for deploy infra to succeed
        if: steps.check-k8s-changes.outputs.any_changed == 'true'
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-deploy-infra
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: Deploy Infra Staging
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          timeoutSeconds: 100

      - if: steps.check-k8s-changes.outputs.any_changed == 'true' && steps.wait-for-deploy-infra.outputs.conclusion == 'failure'
        name: Checking the deploy status
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Deploy to env infra fail, we will not deploy service cause service need env to run')

  build-and-deploy-to-staging:
    needs: checking-deploy-k8s-change
    if: github.ref == 'refs/heads/develop'
    name: Deploy Staging to GKE
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: vtd-fe-admin-v2
      GCP_PROJECT_ID: spartan-impact-319504
      GCP_REGISTRY_HOST: asia.gcr.io
      GKE_CLUSTER: vitadairy-k8s-dev
      GKE_ZONE: asia-southeast1-b
      DEPLOYMENT_NAME: vtd-fe-admin-v2
      GAR_NAME: vtd-dev
      GAR_HOST: asia-southeast1-docker.pkg.dev
      GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authen GCP
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Setup GCP
        uses: google-github-actions/setup-gcloud@v0.6.0

      - name: Get GKE credentials
        run: |-
          gcloud container clusters get-credentials $GKE_CLUSTER --zone=$GKE_ZONE

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker $GAR_HOST --quiet

      - name: Build Docker
        run: docker build -t $IMAGE_NAME:latest .

      - name: Push Docker Image to Artifact Registry
        run: |-
          docker tag $IMAGE_NAME:latest $GAR_HOST/$GCP_PROJECT_ID/$GAR_NAME/$IMAGE_NAME:latest
          docker push $GAR_HOST/$GCP_PROJECT_ID/$GAR_NAME/$IMAGE_NAME:latest
      # - name: Build & Push
      #   run: |-
      #     gcloud builds submit \
      #       --quiet \
      #       --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"

      - name: Deploy
        run: |-
          gcloud run deploy
            --image "$GAR_HOST/$GCP_PROJECT_ID/$GAR_NAME/$IMAGE_NAME:latest" \
            --platform "managed"
      # - name: Deploy to GKE
      #   run: |-
      #     kubectl rollout restart deployment $DEPLOYMENT_NAME

  build-and-deploy-to-prod:
    if: github.ref == 'refs/heads/prod'
    name: Push image production to GAR
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: vtd-fe-admin-v2
      GCP_PROJECT_ID: spartan-impact-319504
      GCP_REGISTRY_HOST: asia.gcr.io
      GKE_CLUSTER: vitadairy-k8s-dev
      GKE_ZONE: asia-southeast1-b
      DEPLOYMENT_NAME: vtd-fe-admin-v2
      GAR_NAME: vtd-prod
      GAR_HOST: asia-southeast1-docker.pkg.dev
      GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authen GCP
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: Setup GCP
        uses: google-github-actions/setup-gcloud@v0.6.0

      - name: Get GKE credentials
        run: |-
          gcloud container clusters get-credentials $GKE_CLUSTER --zone=$GKE_ZONE

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker $GAR_HOST --quiet

      - name: Build Docker
        run: docker build -t $IMAGE_NAME:latest .

      - name: Push Docker Image to Artifact Registry
        run: |-
          docker tag $IMAGE_NAME:latest $GAR_HOST/$GCP_PROJECT_ID/$GAR_NAME/$IMAGE_NAME:$GITHUB_SHA
          docker push $GAR_HOST/$GCP_PROJECT_ID/$GAR_NAME/$IMAGE_NAME:$GITHUB_SHA
